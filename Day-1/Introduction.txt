1.Why is Java Famous?
   ->  Because it achieves:
         -> Platform Independence
         -> Write Once, Run Anywhere (WORA)
         -> Multithreading

2.What is Platform Dependency?
   ->  Applications that run only on a specific operating system.

3.What is Platform Independence?
   ->  Applications that can run on any operating system.

4.Why Do We Send Bytecode or Class Files to the Client Instead of Source Code?
   ->  There are several reasons for this, but the primary reason is that we do not want to share our programming logic with others. Sending source 
       code would expose the internal workings of the application, making it vulnerable to unauthorized access, modification, or reverse engineering.

5.Compiler vs. Interpreter
   ->  A compiler translates the entire source code into machine code before execution, which allows the program to run faster since no translation 
       occurs during runtime. In contrast, an interpreter translates and executes code line by line during runtime, resulting in slower execution due 
       to the overhead of real-time translation.

6.Is Java a Compiled or Interpreted Language?
   ->  Java supports both compilation and interpretation:
         ->  The compiler is used to convert the source code into bytecode.
         ->  The JVM (Java Virtual Machine) acts as an interpreter to execute the bytecode.

7.What is an Algorithm?
   ->  A step-by-step procedure to solve a problem.

8.What is a Flowchart?
   ->  A flowchart is a pictorial representation of an algorithm or process. It uses standardized symbols such as rectangles, diamonds, and arrows to 
       visually depict the steps, decisions, and flow of a process or algorithm in sequential order.

9.Is DSA Specific to Java?
   ->  No, DSA (Data Structures and Algorithms) is generic and can be applied to any programming language.
